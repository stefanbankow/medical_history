version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: medical_history_postgres
    environment:
      POSTGRES_DB: medical_history
      POSTGRES_USER: medical_user
      POSTGRES_PASSWORD: medical_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - medical_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medical_user -d medical_history"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medical_history_backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_USERNAME: medical_user
      DB_PASSWORD: medical_password
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: medical_history
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - medical_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: medical_history_frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - medical_network
    environment:
      REACT_APP_API_URL: http://localhost:8080

volumes:
  postgres_data:

networks:
  medical_network:
    driver: bridge
